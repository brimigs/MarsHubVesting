@use 'sass:math';
$rem-base: 15px;

/* Colors */
$colorWhite: #ffffff;

/* Background Colors */
$backgroundBody: #562a3b;

/* CI Colors */
$colorPrimary: #14a693;
$colorPrimaryHighlight: #15bfa9;
$colorPrimaryAlpha: rgba(20, 166, 147, 0.15);
$colorSecondary: #524bb1;
$colorSecondaryHighlight: #6962cc;
$colorSecondaryDark: #440b37;
$colorSecondaryAlpha: rgba(68, 11, 55, 0.7);
$colorAccent: #2c1b2f;
$colorAccentHighlight: #421f32;
$colorAccentDark: #341a2a;
$colorAccentInverted: #345dff;

/* Alpha Colors */
$alphaWhite10: rgba(255, 255, 255, 0.1);
$alphaWhite20: rgba(255, 255, 255, 0.2);
$alphaWhite30: rgba(255, 255, 255, 0.3);
$alphaWhite40: rgba(255, 255, 255, 0.4);
$alphaWhite50: rgba(255, 255, 255, 0.5);
$alphaWhite60: rgba(255, 255, 255, 0.6);
$alphaWhite70: rgba(255, 255, 255, 0.7);
$alphaWhite80: rgba(255, 255, 255, 0.8);
$alphaWhite90: rgba(255, 255, 255, 0.9);
$alphaBlack10: rgba(0, 0, 0, 0.1);
$alphaBlack20: rgba(0, 0, 0, 0.2);
$alphaBlack30: rgba(0, 0, 0, 0.3);
$alphaBlack40: rgba(0, 0, 0, 0.4);
$alphaBlack50: rgba(0, 0, 0, 0.5);
$alphaBlack60: rgba(0, 0, 0, 0.6);
$alphaBlack70: rgba(0, 0, 0, 0.7);
$alphaBlack80: rgba(0, 0, 0, 0.8);
$alphaBlack90: rgba(0, 0, 0, 0.9);

/* Typography */
$fontWeightLight: 300;
$fontWeightRegular: 400;
$fontWeightSemibold: 600;

$fontColorLightPrimary: $colorWhite;

@mixin typoH1 {
  font-weight: $fontWeightRegular;
  font-size: rem-calc(38);
  line-height: rem-calc(38);
}

@mixin typoH1caps {
  @include typoH1;
  text-transform: uppercase;
  text-indent: rem-calc(16);
  letter-spacing: rem-calc(12);
}

@mixin typoH2 {
  font-weight: $fontWeightRegular;
  font-size: rem-calc(26);
  line-height: rem-calc(40);
}

@mixin typoH2caps {
  @include typoH2;
  text-transform: uppercase;
  letter-spacing: rem-calc(7);
}

@mixin typoH3 {
  font-weight: $fontWeightRegular;
  font-size: rem-calc(24);
  line-height: rem-calc(30);
}

@mixin typoH3caps {
  @include typoH3;
  text-transform: uppercase;
  letter-spacing: rem-calc(12);
}

@mixin typoL {
  font-size: rem-calc(18);
  line-height: space(7);
}

@mixin typoM {
  font-size: rem-calc(15);
  line-height: space(5);
}

@mixin typoS {
  font-size: rem-calc(13.33);
  line-height: space(5);
}

/* Desktop */
@mixin typoH1Desktop {
  font-weight: $fontWeightRegular;
  font-size: rem-calc(60);
  line-height: rem-calc(60);
}

@mixin typoH1capsDesktop {
  @include typoH1Desktop;
  text-transform: uppercase;
  text-indent: rem-calc(16);
  letter-spacing: rem-calc(24);
}

@mixin typoH2Desktop {
  font-weight: $fontWeightRegular;
  font-size: rem-calc(36);
  line-height: rem-calc(60);
}

@mixin typoH2capsDesktop {
  @include typoH2Desktop;
  text-transform: uppercase;
  letter-spacing: rem-calc(14);
}

@mixin typoH3Desktop {
  font-weight: $fontWeightRegular;
  font-size: rem-calc(24);
  line-height: rem-calc(30);
}

@mixin typoH3capsDesktop {
  @include typoH3Desktop;
  text-transform: uppercase;
  letter-spacing: rem-calc(12);
}

/* Buttons */
$buttonBorder: $alphaWhite40;
$buttonBorderHover: $colorWhite;

@mixin buttonS {
  @include typoS;
  @include padding(1.5, 5);
}

@mixin buttonM {
  @include typoM;
  @include padding(1.5, 5);
}

@mixin buttonL {
  @include typoL;
  @include padding(1.5, 15);
}

@mixin buttonSolidPrimary {
  &.primary {
    background-color: $colorPrimary;

    &:hover,
    &:focus {
      background-color: $colorPrimaryHighlight;
    }

    &:active {
      background-color: lighten($colorPrimary, 10%);
    }
  }
}

@mixin buttonSolidSecondary {
  &.secondary {
    background-color: $colorSecondary;

    &:hover,
    &:focus {
      background-color: $colorSecondaryHighlight;
    }

    &:active {
      background-color: lighten($colorSecondary, 10%);
    }
  }
}

@mixin buttonSolidTertiary {
  &.tertiary {
    background-color: $colorSecondaryDark;
    border: 1px solid $alphaWhite60;

    &:hover,
    &:focus {
      border: 1px solid $fontColorLightPrimary;
    }

    &:active {
      background-color: lighten($colorSecondaryDark, 10%);
    }
  }
}

/* Spacing */
$spacingBase: 4;

@function space($multiplier) {
  $space: rem-calc($spacingBase * $multiplier);
  @return $space;
}

@mixin padding($top: 1, $right: null, $bottom: null, $left: null) {
  @if $left {
    padding: space($top) space($right) space($bottom) space($left);
  } @else {
    @if $bottom {
      padding: space($top) space($right) space($bottom);
    } @else {
      @if $right {
        padding: space($top) space($right);
      } @else {
        padding: space($top);
      }
    }
  }
}

@mixin margin($top: 1, $right: null, $bottom: null, $left: null) {
  @if $left {
    margin: space($top) space($right) space($bottom) space($left);
  } @else {
    @if $bottom {
      margin: space($top) space($right) space($bottom);
    } @else {
      @if $right {
        margin: space($top) space($right);
      } @else {
        margin: space($top);
      }
    }
  }
}

@function strip-unit($num) {
  @return math.div($num, $num * 0 + 1);
}

@function convert-to-rem($value, $base-value: $rem-base) {
  $value: math.div(strip-unit($value), strip-unit($base-value)) * 1rem;
  @if ($value == 0rem) {
    $value: 0;
  }
  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);
  @if $max == 1 {
    @return convert-to-rem(nth($values, 1), $base-value);
  }
  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

$contentWidth: rem-calc(990);

/* Breakpoints */
$bpDesktopLow: rem-calc(1280);
$bpMediumHigh: rem-calc(1279);
$bpMediumLow: rem-calc(841);
$bpSmallHigh: rem-calc(840);

/* Border Radius */
$borderRadiusXXXS: rem-calc(3);
$borderRadiusXXS: rem-calc(4);
$borderRadiusXS: rem-calc(5);
$borderRadiusS: rem-calc(8);
$borderRadiusM: rem-calc(9);
$borderRadiusL: rem-calc(12);
$borderRadiusXL: rem-calc(16);
$borderRadiusXXL: rem-calc(20);
$borderRadiusXXXL: rem-calc(30);
$borderRadiusXXXXL: rem-calc(100);
$borderRadiusRound: 50%;
